name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        run: |
          source venv/bin/activate
          python -m pytest -v

      - name: Upload app files
        uses: actions/upload-artifact@v3
        with:
          name: flask-app
          path: |
            app.py
            requirements.txt
            project/
            instance/
            tests/

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Download app files
        uses: actions/download-artifact@v3
        with:
          name: flask-app
          path: ./app_upload

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "./app_upload"
          target: "/home/ubuntu/app"

      - name: SSH into EC2 and restart app
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/app
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            pkill -f "flask run" || true
            nohup flask --app app run --host=0.0.0.0 > flask.log 2>&1 &
